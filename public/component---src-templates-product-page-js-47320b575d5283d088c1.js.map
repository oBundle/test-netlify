{"version":3,"sources":["webpack:///./src/components/bigcommerce/ProductCard.js","webpack:///./src/templates/product-page.js","webpack:///./src/components/bigcommerce/AddToCartButton.js","webpack:///./src/components/bigcommerce/ProductPrices.js"],"names":["ProductCard","render","product","this","props","className","to","custom_url","url","title","name","src","images","length","url_standard","alt","ProductPrices","AddToCartButton","productId","variants","product_id","variantId","id","React","Component","ProductPageTemplate","image","products","heading","description","style","backgroundImage","childImageSharp","fluid","boxShadow","backgroundColor","color","padding","map","key","productPageQuery","ProductPage","data","frontmatter","markdownRemark","allBigCommerceProducts","nodes","Layout","children","value","useContext","CartContext","addToCart","addingToCart","state","data-js","type","disabled","onClick","prices","PriceContext","latestProduct","bigcommerce_id","price","calculated_price","sale_price","currency","amount"],"mappings":"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","file":"component---src-templates-product-page-js-47320b575d5283d088c1.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport AddToCartButton from './AddToCartButton';\nimport ProductPrices from './ProductPrices';\n\nclass ProductCard extends React.Component {\n  render() {\n    const product = this.props.product;\n\n    return (\n      <div className=\"bc-product-card\">\n        <Link to={`/products${product.custom_url.url}`} className=\"bc-product-card-image-anchor\" title={product.name}>\n          <div className=\"bc-product-card__featured-image\">\n            <img\n              className=\"attachment-bc-medium size-bc-medium\"\n              src={\n                (product.images.length && product.images[0].url_standard) ||\n                '/img/default-bc-product.png'\n              }\n              alt={product.name}\n            />\n          </div>\n        </Link>\n\n        <div className=\"bc-product__meta\">\n          <h3 className=\"bc-product__title\">\n            <Link to={`/products${product.custom_url.url}`} className=\"bc-product__title-link\" title={product.name}>{product.name}</Link>\n          </h3>\n          \n          <ProductPrices product={product} />\n        </div>\n\n        <AddToCartButton\n          productId={product.variants[0].product_id}\n          variantId={product.variants[0].id}>\n          Add to Cart\n        </AddToCartButton>\n      </div>\n    )\n  }\n}\n\nexport default ProductCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport ProductCard from '../components/bigcommerce/ProductCard';\n\nexport const ProductPageTemplate = ({\n  image,\n  title,\n  heading,\n  description,\n  products\n}) => (\n  <div className=\"content\">\n    <div\n      className=\"full-width-image-container margin-top-0\"\n      style={{\n        backgroundImage: `url(${\n          !!image.childImageSharp ? image.childImageSharp.fluid.src : image\n        })`\n      }}>\n      <h2\n        className=\"has-text-weight-bold is-size-1\"\n        style={{\n          boxShadow:\n            '0.5rem 0 0 rgba(0, 0, 0, 0.75), -0.5rem 0 0 rgba(0, 0, 0, 0.75)',\n          backgroundColor: 'rgba(0, 0, 0, 0.75)',\n          color: 'white',\n          padding: '1rem'\n        }}>\n        {title}\n      </h2>\n    </div>\n    <section className=\"section section--gradient\">\n      <div className=\"container\">\n        <div className=\"section bc-product-grid bc-product-grid--archive bc-product-grid--4col\">\n          {products.map(product => (\n            <ProductCard key={product.id} product={product} />\n          ))}\n        </div>\n      </div>\n    </section>\n  </div>\n);\n\nProductPageTemplate.propTypes = {\n  image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  title: PropTypes.string,\n  heading: PropTypes.string,\n  description: PropTypes.string,\n  products: PropTypes.array\n};\n\nconst ProductPage = ({ data }) => {\n  const { frontmatter } = data.markdownRemark;\n  const products = data.allBigCommerceProducts.nodes;\n\n  return (\n    <Layout>\n      <ProductPageTemplate\n        image={frontmatter.image}\n        title={frontmatter.title}\n        heading={frontmatter.heading}\n        description={frontmatter.description}\n        products={products}\n      />\n    </Layout>\n  );\n};\n\nProductPage.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.object\n    }),\n    allBigCommerceProducts: PropTypes.shape({\n      nodes: PropTypes.array\n    })\n  })\n};\n\nexport default ProductPage;\n\nexport const productPageQuery = graphql`\n  query ProductPage($id: String!) {\n    allBigCommerceProducts {\n      nodes {\n        id\n        brand_id\n        name\n        sku\n        price\n        calculated_price\n        retail_price\n        sale_price\n        map_price\n        bigcommerce_id\n        custom_url {\n          url\n        }\n        images {\n          url_thumbnail\n          url_standard\n        }\n        variants {\n          product_id\n          id\n          sku\n        }\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      frontmatter {\n        title\n        image {\n          childImageSharp {\n            fluid(maxWidth: 2048, quality: 100) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React, { useContext } from 'react';\nimport CartContext from '../../context/CartProvider';\n\nconst AddToCartButton = ({ children, productId, variantId }) => {\n  const value = useContext(CartContext);\n  const addToCart = value && value.addToCart;\n  const addingToCart = value && value.state.addingToCart;\n\n  return (\n    <div className=\"bc-product-card\">\n      <div className=\"bc-product__actions\" data-js=\"bc-product-group-actions\">\n        <div className=\"bc-form bc-product-form\">\n          <div className=\"bc-product-form__product-message\"></div>\n          <button\n            className=\"bc-btn bc-btn--form-submit bc-btn--add_to_cart\"\n            type=\"submit\"\n            disabled={addingToCart === productId}\n            onClick={() => addToCart(productId, variantId)}>\n            {addingToCart === productId ? 'Adding to Cart' : children}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddToCartButton;\n","import React, { useContext } from 'react';\nimport CurrencyFormatter from './CurrencyFormatter';\nimport PriceContext from '../../context/PriceProvider';\n\nconst currencyCode = 'USD'; // TODO: Move this to use settings merchant sets up in BigCommerce (v2 Currencies API)\n\nconst ProductPrices = ({ product }) => {\n  const prices = useContext(PriceContext);\n  const latestProduct =\n    prices && prices[product.bigcommerce_id]\n      ? prices[product.bigcommerce_id]\n      : {\n          price: null,\n          calculated_price: null,\n          sale_price: null\n        };\n  return (\n    <div className=\"bc-product__pricing initialized\">\n      {latestProduct.sale_price !== 0 ? (\n        <p className=\"bc-product__pricing--api bc-product__pricing--visible\">\n          <span className=\"original-price-node bc-product__original-price bc-show-current-price\">\n            <CurrencyFormatter\n              currency={currencyCode}\n              amount={latestProduct.price}\n            />\n          </span>\n          <span className=\"sale-node bc-product__price bc-product__price--sale bc-show-current-price\">\n            <CurrencyFormatter\n              currency={currencyCode}\n              amount={latestProduct.calculated_price}\n            />\n          </span>\n        </p>\n      ) : (\n        <p className=\"bc-product__pricing--api bc-product__pricing--visible\">\n          <span className=\"price-node bc-product-price bc-product__price--base bc-show-current-price\">\n            <CurrencyFormatter\n              currency={currencyCode}\n              amount={latestProduct.calculated_price}\n            />\n          </span>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default ProductPrices;\n"],"sourceRoot":""}